// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Skornel02.ETR.Api;

#nullable disable

namespace Skornel02.ETR.Api.Migrations
{
    [DbContext(typeof(ETRContext))]
    [Migration("20231014104514_UserInformations")]
    partial class UserInformations
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0-rc.1.23419.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Skornel02.ETR.Api.Entities.DegreeParticipation", b =>
                {
                    b.Property<string>("Username")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("DegreeName")
                        .HasColumnType("varchar(255)");

                    b.Property<DateOnly?>("EndDate")
                        .HasColumnType("date");

                    b.Property<DateOnly>("StartDate")
                        .HasColumnType("date");

                    b.HasKey("Username", "DegreeName");

                    b.HasIndex("DegreeName");

                    b.ToTable("DegreeParticipation");
                });

            modelBuilder.Entity("Skornel02.ETR.Api.Entities.DegreeType", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("varchar(255)");

                    b.HasKey("Name");

                    b.ToTable("DegreeType");
                });

            modelBuilder.Entity("Skornel02.ETR.Api.Entities.User", b =>
                {
                    b.Property<string>("Username")
                        .HasColumnType("varchar(255)");

                    b.Property<DateOnly>("BirthDate")
                        .HasColumnType("date");

                    b.Property<string>("BirthLocation")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("EmailAddress")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Username");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Skornel02.ETR.Api.Entities.UserTypeEntity", b =>
                {
                    b.Property<int>("UserType")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .HasColumnType("varchar(255)");

                    b.HasKey("UserType", "Username");

                    b.HasIndex("Username");

                    b.ToTable("UserTypeEntity");
                });

            modelBuilder.Entity("Skornel02.ETR.Api.Entities.DegreeParticipation", b =>
                {
                    b.HasOne("Skornel02.ETR.Api.Entities.DegreeType", "DegreeType")
                        .WithMany("DegreeParticipations")
                        .HasForeignKey("DegreeName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Skornel02.ETR.Api.Entities.User", "User")
                        .WithMany("DegreeParticipations")
                        .HasForeignKey("Username")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DegreeType");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Skornel02.ETR.Api.Entities.UserTypeEntity", b =>
                {
                    b.HasOne("Skornel02.ETR.Api.Entities.User", "User")
                        .WithMany("Roles")
                        .HasForeignKey("Username")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Skornel02.ETR.Api.Entities.DegreeType", b =>
                {
                    b.Navigation("DegreeParticipations");
                });

            modelBuilder.Entity("Skornel02.ETR.Api.Entities.User", b =>
                {
                    b.Navigation("DegreeParticipations");

                    b.Navigation("Roles");
                });
#pragma warning restore 612, 618
        }
    }
}
